From e7629a5da70737d8463a4ec9854a22b61b1e8980 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Vojt=C4=9Bch=20Hejsek?= <hejsekvojtech@gmail.com>
Date: Tue, 12 Sep 2017 16:17:53 +0200
Subject: [PATCH] Use SoftVideoDecoder blobs for MediaTek

---
 .../include/SoftVideoDecoderOMXComponent.h         |  3 ++
 .../omx/SoftVideoDecoderOMXComponent.cpp           | 32 ++++++++++++++++++++--
 2 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/media/libstagefright/include/SoftVideoDecoderOMXComponent.h b/media/libstagefright/include/SoftVideoDecoderOMXComponent.h
index c9fd74542..1ce2a8454 100644
--- a/media/libstagefright/include/SoftVideoDecoderOMXComponent.h
+++ b/media/libstagefright/include/SoftVideoDecoderOMXComponent.h
@@ -97,6 +97,9 @@ struct SoftVideoDecoderOMXComponent : public SimpleSoftOMXComponent {
             const char *mimeType,
             OMX_U32 minCompressionRatio = 1u);
 
+	// For MTK blob compatibility
+    virtual void updatePortDefinitions(bool updateCrop = true);
+			
     virtual void updatePortDefinitions(bool updateCrop = true, bool updateInputSize = false);
 
     uint32_t outputBufferWidth();
diff --git a/media/libstagefright/omx/SoftVideoDecoderOMXComponent.cpp b/media/libstagefright/omx/SoftVideoDecoderOMXComponent.cpp
index 409cef7ca..2d535886c 100644
--- a/media/libstagefright/omx/SoftVideoDecoderOMXComponent.cpp
+++ b/media/libstagefright/omx/SoftVideoDecoderOMXComponent.cpp
@@ -147,6 +147,34 @@ void SoftVideoDecoderOMXComponent::initPorts(
     updatePortDefinitions(true /* updateCrop */, true /* updateInputSize */);
 }
 
+// For MTK blob compatibility
+void SoftVideoDecoderOMXComponent::updatePortDefinitions(bool updateCrop) {
+    OMX_PARAM_PORTDEFINITIONTYPE *def = &editPortInfo(kInputPortIndex)->mDef;
+    def->format.video.nFrameWidth = mWidth;
+    def->format.video.nFrameHeight = mHeight;
+    def->format.video.nStride = def->format.video.nFrameWidth;
+    def->format.video.nSliceHeight = def->format.video.nFrameHeight;
+
+    def->nBufferSize = def->format.video.nFrameWidth * def->format.video.nFrameHeight * 3 / 2;
+
+    def = &editPortInfo(kOutputPortIndex)->mDef;
+    def->format.video.nFrameWidth = outputBufferWidth();
+    def->format.video.nFrameHeight = outputBufferHeight();
+    def->format.video.nStride = def->format.video.nFrameWidth;
+    def->format.video.nSliceHeight = def->format.video.nFrameHeight;
+
+    def->nBufferSize =
+            (def->format.video.nFrameWidth *
+             def->format.video.nFrameHeight * 3) / 2;
+
+    if (updateCrop) {
+        mCropLeft = 0;
+        mCropTop = 0;
+        mCropWidth = mWidth;
+        mCropHeight = mHeight;
+    }
+}
+
 void SoftVideoDecoderOMXComponent::updatePortDefinitions(bool updateCrop, bool updateInputSize) {
     OMX_PARAM_PORTDEFINITIONTYPE *outDef = &editPortInfo(kOutputPortIndex)->mDef;
     outDef->format.video.nFrameWidth = outputBufferWidth();
@@ -219,12 +247,12 @@ void SoftVideoDecoderOMXComponent::handlePortSettingsChange(
                     mAdaptiveMaxHeight = height;
                 }
             }
-            updatePortDefinitions(updateCrop);
+            updatePortDefinitions(updateCrop, false);
             notify(OMX_EventPortSettingsChanged, kOutputPortIndex, 0, NULL);
             mOutputPortSettingsChange = AWAITING_DISABLED;
             *portWillReset = true;
         } else {
-            updatePortDefinitions(updateCrop);
+            updatePortDefinitions(updateCrop, false);
 
             if (fakeStride) {
                 // MAJOR HACK that is not pretty, it's just to fool the renderer to read the correct
